"use strict";const r=require("electron");r.contextBridge.exposeInMainWorld("api",{docker:{getDockerStatus:async()=>r.ipcRenderer.invoke("docker:dockerStatus"),getStatus:async e=>r.ipcRenderer.invoke("docker:status",e),start:async e=>r.ipcRenderer.invoke("docker:start",e),stop:async e=>r.ipcRenderer.invoke("docker:stop",e),remove:async e=>r.ipcRenderer.invoke("docker:remove",e),create:async e=>r.ipcRenderer.invoke("docker:create",e),streamLogs(e,n,o){const t=new MessageChannel;t.port1.onmessage=s=>{o(s.data)},r.ipcRenderer.postMessage("docker:streamLogs",{key:e,relay:n},[t.port2])},stopStreamLogs(e){r.ipcRenderer.invoke("docker:stopStreamLogs",e)}}});
