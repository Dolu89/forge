"use strict";const r=require("electron");r.contextBridge.exposeInMainWorld("api",{docker:{getDockerStatus:async()=>r.ipcRenderer.invoke("docker:dockerStatus"),getStatus:async e=>r.ipcRenderer.invoke("docker:status",e),getContainer:async e=>r.ipcRenderer.invoke("docker:container",e),start:async e=>r.ipcRenderer.invoke("docker:start",e),stop:async e=>r.ipcRenderer.invoke("docker:stop",e),remove:async e=>r.ipcRenderer.invoke("docker:remove",e),create:async(e,n,t)=>r.ipcRenderer.invoke("docker:create",e,n,t),streamLogs(e,n,t){const o=new MessageChannel;o.port1.onmessage=s=>{t(s.data)},r.ipcRenderer.postMessage("docker:streamLogs",{key:e,containerIds:n},[o.port2])},stopStreamLogs(e){r.ipcRenderer.invoke("docker:stopStreamLogs",e)}}});
