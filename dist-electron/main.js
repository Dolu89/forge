"use strict";var R=Object.defineProperty;var D=(r,t,e)=>t in r?R(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var f=(r,t,e)=>(D(r,typeof t!="symbol"?t+"":t,e),e);const s=require("electron"),p=require("path"),h=require("node:fs/promises"),E=require("stream");var m=(r=>(r.NostrRsRelay="nostr-rs-relay",r.Nostream="nostream",r))(m||{}),l=(r=>(r.Running="running",r.Stopped="stopped",r.Partial="partial",r))(l||{});function v({onlyFirst:r=!1}={}){const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,r?void 0:"g")}const _=process.env.VITE_DEV_SERVER_URL===void 0,w=require("dockerode"),C=require("dockerode-compose");class I{constructor(){f(this,"docker");console.log("docker service init"),this.intialize()}async intialize(){const t=[`${process.env.HOME}/.docker/run/docker.sock`,`${process.env.HOME}/.docker/desktop/docker.sock`,"/var/run/docker.sock"];for(const e of t)if(await h.stat(e)){console.log("docker socket detected:",e),this.docker=new w({socketPath:e});break}this.docker||(this.docker=new w)}async getDockerStatus(){return await this.intialize().catch(()=>{}),this.docker?l.Running:l.Stopped}async getStatus(t){if(!this.docker)throw new Error("Docker not initialized");let e=[];for(const o of t){const a=await this.getContainer(o).inspect();e.push(a.State.Status==="running")}return e.every(o=>o)?l.Running:e.some(o=>o)?l.Partial:l.Stopped}async startContainers(t){if(!this.docker)throw new Error("Docker not initialized");for(const e of t)await this.getContainer(e).start().catch(()=>console.log("Relay already started"))}async removeContainers(t){if(!this.docker)throw new Error("Docker not initialized");console.log("removing containers",t.join(", "));for(const e of t)await this.getContainer(e).remove()}getContainer(t){if(!this.docker)throw new Error("Docker not initialized");return this.docker.getContainer(t)}async stopContainers(t){if(!this.docker)throw new Error("Docker not initialized");for(const e of t)await this.getContainer(e).stop().catch(()=>console.log("Relay already stopped"))}async getDockerComposeFileData(t){return h.readFile(`${s.app.getAppPath()}/docker/${t}`,"utf8")}async getNostrRsRelayDockerComposeFileData(t,e){return(await this.getDockerComposeFileData("docker-compose.nostr-rs-relay.yml")).replaceAll("{{tag}}",t).replaceAll("{{port}}",e.toString())}async getNostreamDockerComposeFileData(t,e){return(await this.getDockerComposeFileData("docker-compose.nostream.yml")).replaceAll("{{tag}}",t).replaceAll("{{port}}",e.toString())}async create(t,e,o){if(!this.docker)throw new Error("Docker not initialized");let n="";switch(e){case m.NostrRsRelay:n=await this.getNostrRsRelayDockerComposeFileData(o,t);break;case m.Nostream:n=await this.getNostreamDockerComposeFileData(o,t);break;default:throw new Error("Unknown relay type")}const a=`${s.app.getPath("userData")}/docker`;await h.mkdir(a,{recursive:!0});const i=`${a}/docker-compose.yml`;await h.writeFile(i,n);const u=_?"forge_":"forge_dev_"+t.toString(),d=await new C(this.docker,i,u).up();return{port:t,containerIds:d.services.map(y=>y.id)}}streamLogs(t,e){const o=[];for(const i of t){const u=this.getContainer(i);var n=new E.PassThrough;o.push(n),n.on("data",function(k){let d=k.toString("utf8");d=d.replace(v(),""),e(d)}),u.logs({follow:!0,stdout:!0,stderr:!0,tail:100},function(k,d){k||u.modem.demuxStream(d,n,n)})}function a(){for(const i of o)i.destroy()}return a}}const c=new I;process.env.ROOT=p.join(__dirname,"..");process.env.DIST=p.join(process.env.ROOT,"dist-electron");process.env.VITE_PUBLIC=process.env.VITE_DEV_SERVER_URL?p.join(process.env.ROOT,"public"):p.join(process.env.ROOT,".output/public");process.env.ELECTRON_DISABLE_SECURITY_WARNINGS="true";let g;const S=p.join(process.env.DIST,"preload.js");function F(){g=new s.BrowserWindow({height:800,width:1200,webPreferences:{preload:S,nodeIntegrationInWorker:!0,contextIsolation:!0,nodeIntegration:!0,webSecurity:!1}});const r=new Map;function t(e){var o;r.has(e)&&((o=r.get(e))==null||o.close(),r.delete(e))}s.ipcMain.handle("docker:dockerStatus",async e=>c.getDockerStatus()),s.ipcMain.handle("docker:status",async(e,o)=>c.getStatus(o)),s.ipcMain.handle("docker:container",async(e,o)=>c.getContainer(o)),s.ipcMain.handle("docker:create",async(e,o,n,a)=>c.create(o,n,a)),s.ipcMain.handle("docker:remove",async(e,o)=>c.removeContainers(o)),s.ipcMain.handle("docker:start",async(e,o)=>c.startContainers(o)),s.ipcMain.handle("docker:stop",async(e,o)=>c.stopContainers(o)),s.ipcMain.handle("docker:stopStreamLogs",(e,o)=>{t(o)}),s.ipcMain.on("docker:streamLogs",(e,o)=>{const[n]=e.ports;t(o.key);const a=c.streamLogs(o.containerIds,i=>{n.postMessage(i)});r.set(o.key,{close:a})}),process.env.VITE_DEV_SERVER_URL?(g.loadURL(process.env.VITE_DEV_SERVER_URL),g.webContents.openDevTools()):g.loadFile(p.join(process.env.VITE_PUBLIC,"index.html"))}s.app.whenReady().then(F);
