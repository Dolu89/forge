"use strict";var v=Object.defineProperty;var R=(n,t,e)=>t in n?v(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var g=(n,t,e)=>(R(n,typeof t!="symbol"?t+"":t,e),e);const s=require("electron"),l=require("path"),h=require("node:fs/promises"),y=require("stream");var E=(n=>(n.NostrRsRelay="nostr-rs-relay",n))(E||{}),f=(n=>(n.Running="running",n.Stopped="stopped",n.Partial="partial",n))(f||{});function _({onlyFirst:n=!1}={}){const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,n?void 0:"g")}const I=process.env.VITE_DEV_SERVER_URL===void 0,m=require("dockerode"),C=require("dockerode-compose");class D{constructor(){g(this,"docker");console.log("docker service init"),this.intialize()}async intialize(){const t=[`${process.env.HOME}/.docker/run/docker.sock`,`${process.env.HOME}/.docker/desktop/docker.sock`,"/var/run/docker.sock"];for(const e of t)if(await h.stat(e)){console.log("docker socket detected:",e),this.docker=new m({socketPath:e});break}this.docker||(this.docker=new m)}async getStatus(t){if(!this.docker)throw new Error("Docker not initialized");let e=[];for(const o of t){const i=await this.getContainer(o).inspect();e.push(i.State.Status==="running")}return e.every(o=>o)?f.Running:e.some(o=>o)?f.Partial:f.Stopped}async startContainers(t){if(!this.docker)throw new Error("Docker not initialized");for(const e of t)await this.getContainer(e).start().catch(()=>console.log("Relay already started"))}async removeContainers(t){if(!this.docker)throw new Error("Docker not initialized");console.log("removing containers",t.join(", "));for(const e of t)await this.getContainer(e).remove()}getContainer(t){if(!this.docker)throw new Error("Docker not initialized");return this.docker.getContainer(t)}async stopContainers(t){if(!this.docker)throw new Error("Docker not initialized");for(const e of t)await this.getContainer(e).stop().catch(()=>console.log("Relay already stopped"))}async create(t,e,o){if(!this.docker)throw new Error("Docker not initialized");let r="",i="";switch(e){case E.NostrRsRelay:r="docker-compose.nostr-rs-relay.yml",i=(await h.readFile(`${s.app.getAppPath()}/docker/${r}`,"utf8")).replaceAll("{{tag}}",o).replaceAll("{{port}}",t.toString());break;default:throw new Error("Unknown relay type")}const c=`${s.app.getPath("userData")}/docker`;await h.mkdir(c,{recursive:!0});const p=`${c}/docker-compose.yml`;await h.writeFile(p,i);const a=await new C(this.docker,p,I?"forge":"forge_dev").up();return{port:t,containerIds:a.services.map(w=>w.id)}}streamLogs(t,e){const o=[];for(const c of t){const p=this.getContainer(c);var r=new y.PassThrough;o.push(r),r.on("data",function(u){let a=u.toString("utf8");a=a.replace(_(),""),e(a)}),p.logs({follow:!0,stdout:!0,stderr:!0,tail:100},function(u,a){u||p.modem.demuxStream(a,r,r)})}function i(){for(const c of o)c.destroy()}return i}}const d=new D;process.env.ROOT=l.join(__dirname,"..");process.env.DIST=l.join(process.env.ROOT,"dist-electron");process.env.VITE_PUBLIC=process.env.VITE_DEV_SERVER_URL?l.join(process.env.ROOT,"public"):l.join(process.env.ROOT,".output/public");process.env.ELECTRON_DISABLE_SECURITY_WARNINGS="true";let k;const S=l.join(process.env.DIST,"preload.js");function T(){k=new s.BrowserWindow({height:800,width:1200,webPreferences:{preload:S,nodeIntegrationInWorker:!0,contextIsolation:!0,nodeIntegration:!0,webSecurity:!1}});const n=new Map;function t(e){var o;n.has(e)&&((o=n.get(e))==null||o.close(),n.delete(e))}s.ipcMain.handle("docker:status",async(e,o)=>d.getStatus(o)),s.ipcMain.handle("docker:container",async(e,o)=>d.getContainer(o)),s.ipcMain.handle("docker:create",async(e,o,r,i)=>d.create(o,r,i)),s.ipcMain.handle("docker:remove",async(e,o)=>d.removeContainers(o)),s.ipcMain.handle("docker:start",async(e,o)=>d.startContainers(o)),s.ipcMain.handle("docker:stop",async(e,o)=>d.stopContainers(o)),s.ipcMain.handle("docker:stopStreamLogs",(e,o)=>{t(o)}),s.ipcMain.on("docker:streamLogs",(e,o)=>{const[r]=e.ports;t(o.key);const i=d.streamLogs(o.containerIds,c=>{r.postMessage(c)});n.set(o.key,{close:i})}),process.env.VITE_DEV_SERVER_URL?(k.loadURL(process.env.VITE_DEV_SERVER_URL),k.webContents.openDevTools()):k.loadFile(l.join(process.env.VITE_PUBLIC,"index.html"))}s.app.whenReady().then(T);
